# import networkx as nx
# import matplotlib.pyplot as plt
#
# G = nx.petersen_graph()
# # subax1 = plt.subplot(121)
# # nx.draw(G, with_labels=True, font_weight='bold')
# # subax2 = plt.subplot(122)
# # nx.draw_shell(G, nlist=[range(5, 10), range(5)], with_labels=True, font_weight='bold')
#
# options = {
#     'node_color': 'black',
#     'node_size': 100,
#     'width': 3,
# }
# subax1 = plt.subplot(221)
# nx.draw_random(G, **options)
# subax2 = plt.subplot(222)
# nx.draw_circular(G, **options)
# subax3 = plt.subplot(223)
# nx.draw_spectral(G, **options)
# subax4 = plt.subplot(224)
# nx.draw_shell(G, nlist=[range(5,10), range(5)], **options)
# plt.show()

import networkx as nx
import numpy as np
import matplotlib.pyplot as plt

# P0= [[0, 1, 1, 1, 0, 1], #0
#     [1, 0, 1, 1, 0, 1], #1
#     [1, 1, 0, 1, 0, 1], #2
#     [0, 1, 0, 0, 0, 0], #3
#     [1, 1, 1, 1, 0, 1], #4
#     [1, 1, 1, 1, 1, 0]] #5
#
# G = nx.DiGraph(np.matrix(P0))
# nx.draw(G, with_labels=True, node_size=300, arrows=True)
# plt.show()

# P0= [[0, 0, 0, 1, 0], #0
#     [1, 0, 1, 1, 0], #1
#     [0, 0, 0, 1, 0], #2
#     [0, 1, 0, 0, 0], #3
#     [1, 1, 1, 1, 0]] #4
#
#
# G = nx.DiGraph(np.matrix(P0))
# nx.draw(G, with_labels=True, node_size=300, arrows=True)
# plt.show()


# P0= [[0, 1, 1, 1, 0], #0
#     [0, 0, 0, 0, 0], #1
#     [0, 0, 0, 1, 0], #2
#     [0, 1, 0, 0, 0], #3
#     [1, 1, 1, 1, 0]] #4
#
#
# G = nx.DiGraph(np.matrix(P0))
# nx.draw(G, with_labels=True, node_size=300, arrows=True)
# plt.show()

num_nodes = int(input("Введите количество вершин в графе: "))
adj_matrix = [[0] * num_nodes for _ in range(num_nodes)]
for i in range(num_nodes):
    for j in range(num_nodes):
        if i != j:
            edge = int(input(f"Есть ли ребро между вершиной {i} и вершиной {j}? (1/0): "))
            adj_matrix[i][j] = edge
G = nx.DiGraph(np.matrix(adj_matrix))
nx.draw(G, with_labels=True, node_size=300, arrows=True)
plt.show()


